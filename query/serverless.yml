################################################################
## Example lambda command
## boilerplate from https://github.com/serverless/examples/blob/master/aws-node-typescript-rest-api-with-dynamodb/serverless.yml
################################################################
service: lambda-query # NOTE: update this with your service name

frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs10.x
  environment:
    DYNAMODB_TABLE: query-dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/query-dev"
    - Effect: Allow
      Action:
        - 'dynamodb:ListTables'
        - 'dynamodb:DescribeTable'
        - 'dynamodb:DescribeStream'
        - 'dynamodb:ListStreams'
        - 'dynamodb:GetShardIterator'
        - 'dynamodb:BatchGetItem'
        - 'dynamodb:GetItem'
        - 'dynamodb:Query'
        - 'dynamodb:Scan'
        - 'dynamodb:DescribeReservedCapacity'
        - 'dynamodb:DescribeReservedCapacityOfferings'
        - 'dynamodb:GetRecords'
      Resource:
        - "arn:aws:dynamodb:us-east-1:281318353574:table/command-dev"
functions:
  query:
    handler: dist/query.handler
    events:
      - http:
          path: getcustomers
          method: get
          cors: true
  stream:
    handler: dist/stream.handler
    events:
      - stream:
        type: dynamodb
        batchSize: 1
        enabled: true
        arn: "arn:aws:dynamodb:us-east-1:281318353574:table/command-dev/stream/2019-06-19T15:38:19.176"